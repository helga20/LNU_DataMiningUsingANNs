clear

% Масив із чотирьох двоелементних векторів, які треба розділити на 2 класи
p = [.1 .8 .1 .9; .2 .9 .1 .8];

% Прошарок Кохонена з двома нейронами для аналізу двоелементних векторів входу з діапазоном значень від 0 до 1.
% Перший аргумент вказує діапазон вхідних значень, другий визначає кількість нейронів у прошарку.
net = newc([0 1; 0 1],2);

wts = net.IW{1,1}

% Храктеристика прошароку Кохонена
net.layers{1}

% Храктеристика зсувів
net.biases{1}

% Зміщення
net.b{1}

% gensim(net)

% Реалізуємо 10 циклів навчання
net.trainParam.epochs = 10; % кількість епох (ітерацій навчання)
net = train(net, p); % Навчання нейромережі
net.adaptParam.passes = 10; % К-сть проходів адаптації
[net, y, e] = adapt(net, p); % Адаптація мережі

% Виконаємо моделювання мережі після навчання
a = sim(net, p);
ac = vec2ind(a)

% Результуючі ваги та зміщення
wts1 = net.IW {1,1}
b1 = net.b {1}

