clear
%  Встановимо початкові умови на лінії затримки, а також ваги та зміщення рівними 0, а параметр 
% швидкості налаштування рівним 0.5:
net = newlin([-1 1], 1, [0 1], 0.5);
Pi = {0}; % Початкова умова для елемента затримки
net.IW{1} = [0 0]; % Значення ваг
net.biasConnect = 0; % Значення зміщення

%Щоб застосувати послідовний спосіб адаптації, представимо входи та цілі як масиви комірок:
P = {-1/2 1/3 1/5 1/4}; % Вектор входу
T = {-1 1/6 11/15 7/10}; % Вектор цілі

EE = 10; 
i = 1;

while EE > 0.0001
    [net, a{i}, e{i}, pf] = adapt(net, P, T);
    W(i,:) = net.IW{1,1};
    EE = mse(e{i});
    ee(i) = EE;
    i = i + 1;
end

W(22,:)
a{22}
EE

subplot(3,1,1)
plot(0:22,[zeros(1,4); cell2mat(vertcat(a{:}))],'k') % Рис.21,а
xlabel(''), ylabel('Виходи a(i)'), grid
subplot(3,1,2)
plot(0:22,[[0 0]; W],'k') % Рис.21,б
xlabel(''), ylabel('Вага входів w(i)'), grid
subplot(3,1,3)
semilogy(1:22,ee,'+k') % Рис.21,в
xlabel('Цикли'), ylabel('Помилка'), grid
